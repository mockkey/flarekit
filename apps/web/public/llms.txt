# FlareKit API LLMs Prompt Summary (EN)

## 1. List Files & Folders
- Path: `/files` (GET)
- Description: Get a list of files and folders in the current directory
- Params: page, limit (10/20/30/50), sort, order, search, parentId
- Response: items[], total, page, limit, totalPages

## 2. List Folders Only (Folder Tree)
- Path: `/files/folder-tree` (GET)
- Description: Get a list of folders in the current directory
- Params: page, limit, sort, order, search, parentId
- Response: items[], total, page, limit, totalPages

## 3. File/Folder Details
- Path: `/files/{id}` (GET)
- Description: Get details of a specific file or folder
- Params: id (path)
- Response: file/folder detail object

## 4. Upload File
- Path: `/file/upload` (PUT)
- Description: Upload a file (multipart/form-data)
- Params: parentId, hash, file
- Response: fileId, name, size, mime, url, parentId

## 5. Create Folder
- Path: `/files/folder/create` (POST)
- Description: Create a new folder
- Params: name, parentId
- Response: id, name, isDir, parentId, createdAt

## 6. Download File
- Path: `/files/{id}/download` (GET)
- Description: Download file (302 redirect)
- Params: id (path)
- Response: Location header (download URL)

## 7. Soft Delete (Move to Trash)
- Path: `/files/delete` (DELETE)
- Description: Soft delete files/folders (move to trash)
- Params: ids[]
- Response: success

## 8. Permanent Delete
- Path: `/files/permanent-delete` (DELETE)
- Description: Permanently delete files/folders
- Params: ids[]
- Response: success

## 9. List Trash
- Path: `/files/trash` (GET)
- Description: List files/folders in trash
- Params: page, limit
- Response: items[], total, page, limit, totalPages

## 10. Restore from Trash
- Path: `/files/trash/restore/{id}` (POST)
- Description: Restore file/folder from trash
- Params: id (path)
- Response: file/folder info

## 11. Permanently Delete Single Trash Item
- Path: `/files/trash/{id}` (DELETE)
- Description: Permanently delete a single file/folder from trash
- Params: id (path)
- Response: success

## 12. Rename
- Path: `/files/rename` (POST)
- Description: Rename a file or folder
- Params: id, name
- Response: message, data (file/folder info)

## 13. Breadcrumbs
- Path: `/files/breadcrumbs/{parentId}` (GET)
- Description: Get breadcrumb navigation for a folder
- Params: parentId (path)
- Response: [{id, name, parentId}]

## 14. Storage Quota
- Path: `/storage/remaining` (GET)
- Description: Get current user's storage usage and quota
- Response: usedStorage, totalStorage, isPro

---

- All endpoints require Bearer Token authentication.
- See OpenAPI spec for detailed fields, params, and response structure.
- For LLMs/Agent quick understanding of FlareKit file management API capabilities.
